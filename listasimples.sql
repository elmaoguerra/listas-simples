-- MySQL Script generated by MySQL Workbench
-- 03/18/15 18:57:35
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema listasimple
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `listasimple` ;

-- -----------------------------------------------------
-- Schema listasimple
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `listasimple` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `listasimple` ;

-- -----------------------------------------------------
-- Table `listasimple`.`grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listasimple`.`grupo` ;

CREATE TABLE IF NOT EXISTS `listasimple`.`grupo` (
  `id` TINYINT(1) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(20) NOT NULL,
  `metas` TINYINT(1) NULL,
  `autoreflexion` TINYINT(1) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `listasimple`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listasimple`.`usuario` ;

CREATE TABLE IF NOT EXISTS `listasimple`.`usuario` (
  `codigo` VARCHAR(12) NOT NULL,
  `nombre` VARCHAR(100) NULL,
  `email` VARCHAR(120) NULL,
  `password` VARCHAR(40) NOT NULL,
  `conexion` DATETIME(1) NULL DEFAULT CURRENT_TIMESTAMP,
  `grupo_id` TINYINT(1) NOT NULL,
  PRIMARY KEY (`codigo`, `grupo_id`),
  INDEX `fk_user_grupo1_idx` (`grupo_id` ASC),
  CONSTRAINT `fk_user_grupo1`
    FOREIGN KEY (`grupo_id`)
    REFERENCES `listasimple`.`grupo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `listasimple`.`operacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listasimple`.`operacion` ;

CREATE TABLE IF NOT EXISTS `listasimple`.`operacion` (
  `id` TINYINT(2) NOT NULL,
  `name` (255) NOT NULL,
  `descripcion` VARCHAR(255) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `listasimple`.`ejercicio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listasimple`.`ejercicio` ;

CREATE TABLE IF NOT EXISTS `listasimple`.`ejercicio` (
  `id` SMALLINT(1) NOT NULL,
  `enunciado` TEXT(100) NOT NULL,
  `lista_inicial` VARCHAR(45) NULL,
  `solucion` VARCHAR(255) NULL,
  `operacion_id` TINYINT(2) NOT NULL,
  PRIMARY KEY (`id`, `operacion_id`),
  INDEX `fk_ejercicio_operacion1_idx` (`operacion_id` ASC),
  CONSTRAINT `fk_ejercicio_operacion1`
    FOREIGN KEY (`operacion_id`)
    REFERENCES `listasimple`.`operacion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `listasimple`.`resultado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listasimple`.`resultado` ;

CREATE TABLE IF NOT EXISTS `listasimple`.`resultado` (
  `ejercicio_id` SMALLINT(1) NOT NULL,
  `usuario` VARCHAR(12) NOT NULL,
  `tiempo` FLOAT NULL,
  `eficiencia` FLOAT NULL,
  `fecha` DATETIME NULL,
  PRIMARY KEY (`ejercicio_id`, `usuario`),
  INDEX `fk_ejercicio_has_user_user1_idx` (`usuario` ASC),
  INDEX `fk_ejercicio_has_user_ejercicio1_idx` (`ejercicio_id` ASC),
  CONSTRAINT `fk_ejercicio_has_user_ejercicio1`
    FOREIGN KEY (`ejercicio_id`)
    REFERENCES `listasimple`.`ejercicio` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ejercicio_has_user_user1`
    FOREIGN KEY (`usuario`)
    REFERENCES `listasimple`.`usuario` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `listasimple`.`meta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listasimple`.`meta` ;

CREATE TABLE IF NOT EXISTS `listasimple`.`meta` (
  `id` TINYINT(2) NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `metacol` VARCHAR(45) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `listasimple`.`sentencia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listasimple`.`sentencia` ;

CREATE TABLE IF NOT EXISTS `listasimple`.`sentencia` (
  `id` INT NOT NULL,
  `instruccion` VARCHAR(255) NOT NULL,
  `ejercicio_id` SMALLINT(1) NOT NULL,
  PRIMARY KEY (`id`, `ejercicio_id`),
  INDEX `fk_sentencia_ejercicio1_idx` (`ejercicio_id` ASC),
  CONSTRAINT `fk_sentencia_ejercicio1`
    FOREIGN KEY (`ejercicio_id`)
    REFERENCES `listasimple`.`ejercicio` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `listasimple`.`meta_has_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listasimple`.`meta_has_usuario` ;

CREATE TABLE IF NOT EXISTS `listasimple`.`meta_has_usuario` (
  `meta_id` TINYINT(2) NOT NULL,
  `usuario_codigo` VARCHAR(12) NOT NULL,
  `usuario_grupo_id` TINYINT(1) NOT NULL,
  `tiempo` FLOAT NULL,
  `eficiencia` VARCHAR(45) NULL,
  `fecha` DATETIME NULL,
  PRIMARY KEY (`meta_id`, `usuario_codigo`, `usuario_grupo_id`),
  INDEX `fk_meta_has_usuario_usuario1_idx` (`usuario_codigo` ASC, `usuario_grupo_id` ASC),
  INDEX `fk_meta_has_usuario_meta1_idx` (`meta_id` ASC),
  CONSTRAINT `fk_meta_has_usuario_meta1`
    FOREIGN KEY (`meta_id`)
    REFERENCES `listasimple`.`meta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_meta_has_usuario_usuario1`
    FOREIGN KEY (`usuario_codigo` , `usuario_grupo_id`)
    REFERENCES `listasimple`.`usuario` (`codigo` , `grupo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
